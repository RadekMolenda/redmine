<script type="text/javascript" charset="utf-8">
  function add_filter() {
      select = $('add_filter_select');
      field = select.value
      Element.show('tr_' +  field);
      check_box = $('cb_' + field);
      check_box.checked = true;
      toggle_filter(field);
      select.selectedIndex = 0;

      for (i=0; i<select.options.length; i++) {
          if (select.options[i].value == field) {
              select.options[i].disabled = true;
          }    
      }
  }

  function toggle_filter(field) {
      check_box = $('cb_' + field);

      if (check_box.checked) {
          Element.show("operators_" + field);
          toggle_operator(field);
      } else {
          Element.hide("operators_" + field);
          Element.hide("div_values_" + field);
    }
  }

  function toggle_operator(field) {
    operator = $("operators_" + field);
    switch (operator.value) {
      case "!*":
      case "*":
      case "t":
      case "w":
      case "o":
      case "c":
        Element.hide("div_values_" + field);
        break;
      default:
        Element.show("div_values_" + field);
        break;
    }
  }

  function toggle_multi_select(field) {
      select = $('values_' + field);
      if (select.multiple == true) {
          select.multiple = false;
      } else {
          select.multiple = true;
      }
  }
</script>

<div id="backlog_tickets">
</div>

<script type="text/javascript" charset="utf-8">
  document.observe("dom:loaded", function(){
    new Ajax.Updater("backlog_tickets", "<%= escape_javascript(@backlog_url) %>", 
      { asynchronous: true, evalScripts: true, method: 'GET', onComplete: function() {
        $('backlog_tickets').down('h2').update("<%= escape_javascript(@backlog_title) %>");

        $$("#issue_list tr").each(function(el) { 
          el.innerHTML += "<td class='rank_handle'>&nbsp;</td>" 
        });
        
        Sortable.create("issue_list", {
          tag: 'tr', format: /^[^_]*-(.*)$/,containment: 'issue_list', 
          handle: 'rank_handle',
          constraint: 'vertical',
          // ghosting: true,
          hoverclass: 'sort_hover', 
          // scroll: true, 
          onUpdate: function(container) {
            new Ajax.Request('<%= url_for(:action => "prioritize") %>', {
              parameters: Sortable.serialize(container)
            });
          },
          starteffect: function(element) {
            element._originalBackground = element.getStyle('background-color');
            element.setStyle({background: '#FEFF9F'});
          },
          endeffect: function(element) { 
            element.setStyle({background: (element._originalBackground || '#fff')});
          }
        });
      }
    });
  });
</script>